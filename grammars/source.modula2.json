{
  "fileTypes": [
    "mod",
    "def"
  ],
  "name": "Modula-2",
  "patterns": [
    {
      "captures": {
        "1": {
          "name": "storage.type.function.modula2"
        },
        "2": {
          "name": "entity.name.function.modula2"
        }
      },
      "comment": "Reconocimiento de las palabras de inicio.",
      "match": "\\b(PROCEDURE|DEFINITION MODULE|IMPLEMENTATION MODULE|MODULE)\\b\\s+(\\w+(\\.\\w+)?)"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.modula2"
        },
        "2": {
          "name": "entity.name.function.end.modula2"
        }
      },
      "comment": "Reconocimiento de las palabras de fin.",
      "match": "\\b(END)\\b\\s+(\\w+(\\.\\w+)?)"
    },
    {
      "captures": {
        "1": {
          "name": "storage.type.function.modula2"
        },
        "2": {
          "name": "entity.name.function.modula2"
        }
      },
      "comment": "Definicion de identificadores predefinidos.",
      "match": "\\b(ABS|ADDRES|ADR|BITSET|BOOLEAN|BYTE|CAP|CARDINAL|CHAR|CHR|DEC|DISPOSE|EXCL|FALSE|FLOAT|HALT|HIGH|INC|INCL|INTEGER|LONGCARD|LONGINT|LONGREAL|LONGWORD|NEW|NULLPROC|ODD|ORD|PROC|REAL|SHORTADDR|SHORTCARD|SHORTINT|SIZE|TRUE|TRUNC|VAL|VSIZE|WORD)\\b",
      "name": "meta.function.modula2"
    },
    {
      "comment": "Definicion de palabras reservadas.",
      "match": "\\b(AND|ARRAY|BEGIN|BY|CASE|CONST|DIV|DO|ELSE|ELSIF|END|EXIT|EXPORT|FOR|FORWARD|FROM|GOTO|IF|IMPORT|IN|LABEL|LOOP|MOD|NOT|OF|OR|POINTER|QUALIFIED|RECORD|REPEAT|RETURN|SET|THEN|TO|DOWNTO|TYPE|UNTIL|VAR|WHILE|WITH|NIL)\\b",
      "name": "keyword.control.modula2"
    },
    {
      "include": "#block_comment"
    },
    {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.modula2"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.modula2"
        }
      },
      "name": "string.quoted.double.modula2",
      "patterns": [
        {
          "match": "\\.",
          "name": "constant.character.escape.modula2"
        }
      ]
    },
    {
      "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b",
      "name": "constant.numeric.modula2"
    },
    {
      "match": "(\\(|\\)|\\+|-|\\*|/|:|;|\\.|\\^|=|:=|<|>|#)",
      "name": "variable.parameter.function.modula2"
    }
  ],
  "repository": {
    "block_comment": {
      "applyEndPatternLast": 1,
      "begin": "\\(\\*",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.modula2"
        }
      },
      "patterns": [
        {
          "include": "#block_comment"
        }
      ],
      "end": "\\*\\)",
      "name": "comment.block.modula2.one"
    }
  },
  "scopeName": "source.modula2",
  "uuid": "c01a654e-2960-44f2-aeae-5909f5043d35"
}