{
  "name": "CLIPS",
  "scopeName": "source.clips",
  "fileTypes": [
    "clp"
  ],
  "uuid": "1b2ecbe9-9ccb-401d-8707-9440305081df",
  "patterns": [
    {
      "comment": "Comments line",
      "begin": ";",
      "end": "$\n?",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.clips"
        }
      },
      "name": "comment.line.double-slash.clips"
    },
    {
      "comment": "Keywords",
      "name": "keyword.control.clips",
      "match": "\\b(type|default|allowed-values|slot|not|or|and|assert|retract|gensym|printout|declare|salience|modify|export)\\b"
    },
    {
      "comment": "RHD",
      "name": "constant.language.clips",
      "match": "=>"
    },
    {
      "comment": "Functions",
      "name": "meta.function.clips",
      "match": "(\\?)([a-zA-Z0-9_\\-]*)",
      "captures": {
        "1": {
          "name": "keyword.clips"
        },
        "2": {
          "name": "variable.parameter"
        }
      }
    },
    {
      "comment": "Definitions",
      "match": "(^.*(defrule|deffacts|defmodule|deftemplate)[ \\t]+)([a-zA-Z0-9_\\-]+)",
      "captures": {
        "2": {
          "name": "entity.name.function.clips"
        },
        "3": {
          "name": "variable.clips"
        }
      }
    },
    {
      "comment": "Constant A",
      "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b",
      "name": "constant.other.color.rgb-value.css"
    },
    {
      "comment": "Constant B",
      "match": "(<-|~|%)",
      "name": "constant.language.clips"
    },
    {
      "comment": "Operators",
      "match": "(|=|>|\\+|\\*|\\/|~|%|neq|eq)",
      "name": "entity.name.function.clips"
    },
    {
      "comment": "Operators",
      "match": "(\\()(\\-)",
      "captures": {
        "2": {
          "name": "entity.name.function.clips"
        }
      }
    }
  ]
}