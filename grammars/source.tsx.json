{
  "name": "TypeScriptReact",
  "scopeName": "source.tsx",
  "repository": {
    "cast": {
      "patterns": [
        {
          "include": "#jsx"
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "include": "#jsx"
        }
      ]
    },
    "jsx": {
      "patterns": [
        {
          "include": "#jsx-tag-without-attributes-in-expression"
        },
        {
          "include": "#jsx-tag-in-expression"
        }
      ]
    },
    "jsx-child-tag": {
      "begin": "(?x)\n  (?=(\u003c)\\s*\n  ([_$a-zA-Z][-$\\w.]*(?\u003c!\\.|-))\n  (?=\\s+(?!\\?)|/?\u003e))",
      "end": "(/\u003e)|(?:(\u003c/)\\s*((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?\u003c!\\.|-))\\s*(\u003e))",
      "patterns": [
        {
          "include": "#jsx-tag"
        }
      ],
      "endCaptures": {
        "0": {
          "name": "meta.tag.tsx"
        },
        "1": {
          "name": "punctuation.definition.tag.end.tsx"
        },
        "2": {
          "name": "punctuation.definition.tag.begin.tsx"
        },
        "3": {
          "name": "entity.name.tag.tsx"
        },
        "4": {
          "name": "support.class.component.tsx"
        },
        "5": {
          "name": "punctuation.definition.tag.end.tsx"
        }
      }
    },
    "jsx-children": {
      "patterns": [
        {
          "include": "#jsx-tag-without-attributes"
        },
        {
          "include": "#jsx-child-tag"
        },
        {
          "include": "#jsx-evaluated-code"
        },
        {
          "include": "#jsx-entities"
        }
      ]
    },
    "jsx-entities": {
      "patterns": [
        {
          "name": "constant.character.entity.tsx",
          "match": "(\u0026)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.tsx"
            },
            "3": {
              "name": "punctuation.definition.entity.tsx"
            }
          }
        },
        {
          "name": "invalid.illegal.bad-ampersand.tsx",
          "match": "\u0026"
        }
      ]
    },
    "jsx-evaluated-code": {
      "name": "meta.embedded.expression.tsx",
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "#expression"
        }
      ],
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.embedded.begin.tsx"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.embedded.end.tsx"
        }
      }
    },
    "jsx-string-double-quoted": {
      "name": "string.quoted.double.tsx",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "#jsx-entities"
        }
      ],
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.tsx"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.tsx"
        }
      }
    },
    "jsx-string-single-quoted": {
      "name": "string.quoted.single.tsx",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "#jsx-entities"
        }
      ],
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.tsx"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.tsx"
        }
      }
    },
    "jsx-tag": {
      "name": "meta.tag.tsx",
      "begin": "(?x)\n  (?=(\u003c)\\s*\n  ([_$a-zA-Z][-$\\w.]*(?\u003c!\\.|-))\n  (?=\\s+(?!\\?)|/?\u003e))",
      "end": "(?=(/\u003e)|(?:(\u003c/)\\s*([_$a-zA-Z][-$\\w.]*(?\u003c!\\.|-))\\s*(\u003e)))",
      "patterns": [
        {
          "contentName": "meta.tag.attributes.tsx",
          "begin": "(?x)\n  (\u003c)\\s*\n  ((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?\u003c!\\.|-))\n  (?=\\s+(?!\\?)|/?\u003e)",
          "end": "(?=[/]?\u003e)",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#jsx-tag-attributes"
            },
            {
              "include": "#jsx-tag-attributes-illegal"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.tsx"
            },
            "2": {
              "name": "entity.name.tag.tsx"
            },
            "3": {
              "name": "support.class.component.tsx"
            }
          }
        },
        {
          "contentName": "meta.jsx.children.tsx",
          "begin": "(\u003e)",
          "end": "(?=\u003c/)",
          "patterns": [
            {
              "include": "#jsx-children"
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.tsx"
            }
          }
        }
      ]
    },
    "jsx-tag-attribute-assignment": {
      "name": "keyword.operator.assignment.tsx",
      "match": "=(?=\\s*(?:'|\"|{|/\\*|//|\\n))"
    },
    "jsx-tag-attribute-name": {
      "match": "(?x)\n  \\s*\n  ([_$a-zA-Z][-$\\w]*)\n  (?=\\s|=|/?\u003e|/\\*|//)",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.tsx"
        }
      }
    },
    "jsx-tag-attributes": {
      "patterns": [
        {
          "include": "#jsx-tag-attribute-name"
        },
        {
          "include": "#jsx-tag-attribute-assignment"
        },
        {
          "include": "#jsx-string-double-quoted"
        },
        {
          "include": "#jsx-string-single-quoted"
        },
        {
          "include": "#jsx-evaluated-code"
        }
      ]
    },
    "jsx-tag-attributes-illegal": {
      "name": "invalid.illegal.attribute.tsx",
      "match": "\\S+"
    },
    "jsx-tag-in-expression": {
      "begin": "(?x)\n  (?\u003c=[({\\[,?=\u003e:*]|\u0026\u0026|\\|\\||\\?|\\Wreturn|^return|\\Wdefault|^)\\s*\n  (?!\u003c\\s*[_$[:alpha:]][_$[:alnum:]]*((\\s+extends\\s+[^=\u003e])|,)) # look ahead is not type parameter of arrow\n  (?=(\u003c)\\s*\n  ([_$a-zA-Z][-$\\w.]*(?\u003c!\\.|-))\n  (?=\\s+(?!\\?)|/?\u003e))",
      "end": "(/\u003e)|(?:(\u003c/)\\s*((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?\u003c!\\.|-))\\s*(\u003e))",
      "patterns": [
        {
          "include": "#jsx-tag"
        }
      ],
      "endCaptures": {
        "0": {
          "name": "meta.tag.tsx"
        },
        "1": {
          "name": "punctuation.definition.tag.end.tsx"
        },
        "2": {
          "name": "punctuation.definition.tag.begin.tsx"
        },
        "3": {
          "name": "entity.name.tag.tsx"
        },
        "4": {
          "name": "support.class.component.tsx"
        },
        "5": {
          "name": "punctuation.definition.tag.end.tsx"
        }
      }
    },
    "jsx-tag-without-attributes": {
      "name": "meta.tag.without-attributes.tsx",
      "contentName": "meta.jsx.children.tsx",
      "begin": "(\u003c)\\s*((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?\u003c!\\.|-))?\\s*(\u003e)",
      "end": "(\u003c/)\\s*((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?\u003c!\\.|-))?\\s*(\u003e)",
      "patterns": [
        {
          "include": "#jsx-children"
        }
      ],
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.tsx"
        },
        "2": {
          "name": "entity.name.tag.tsx"
        },
        "3": {
          "name": "support.class.component.tsx"
        },
        "4": {
          "name": "punctuation.definition.tag.end.tsx"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.tsx"
        },
        "2": {
          "name": "entity.name.tag.tsx"
        },
        "3": {
          "name": "support.class.component.tsx"
        },
        "4": {
          "name": "punctuation.definition.tag.end.tsx"
        }
      }
    },
    "jsx-tag-without-attributes-in-expression": {
      "begin": "(?x)\n  (?\u003c=[({\\[,?=\u003e:*]|\u0026\u0026|\\|\\||\\?|\\Wreturn|^return|\\Wdefault|^)\\s*\n  (?=(\u003c)\\s*((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?\u003c!\\.|-))?\\s*(\u003e))",
      "end": "(?!\\s*(\u003c)\\s*((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?\u003c!\\.|-))?\\s*(\u003e))",
      "patterns": [
        {
          "include": "#jsx-tag-without-attributes"
        }
      ]
    }
  }
}
